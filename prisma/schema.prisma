generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

enum Role {
  ADMIN
  MEMBER
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  role      Role     @default(MEMBER)
  orgId     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String    // Original name with proper casing for display
  nameNormalized  String    // Lowercase, trimmed name for uniqueness checks
  description     String?
  orgId           String
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relationships
  services        Service[]
  
  // Ensure normalized category name is unique within each organization
  @@unique([nameNormalized, orgId])
  @@index([orgId])
}

model Service {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  duration    Int      // Duration in minutes
  categoryId  String   @db.ObjectId
  orgId       String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relationships
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  // Ensure service name is unique within each organization
  @@unique([name, orgId])
  @@index([categoryId])
  @@index([orgId])
}
